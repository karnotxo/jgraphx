plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id "biz.aQute.bnd.builder"
}

description = 'jgraphx'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.hasCredentials = hasProperty('nexusStaging.username')

// Use nexus-staging-plugin to workaround https://issues.sonatype.org/browse/OSSRH-5454
nexusPublishing {
  //packageGroup = "com.github.vlsi.mxgraph"  //defaults to 'project.group'
  repositories {
    sonatype {   //custom repository name - 'sonatype' is pre-configured
      //for Sonatype Nexus (OSSRH) which is used for The Central Repository
      stagingProfileId = "77ffab7dd156731e" //can reduce execution time by even 10 seconds
    }
  }
  transitionCheckOptions {
    maxRetries.set(40)
    delayBetween.set(java.time.Duration.ofMillis(3000))
  }
}

sourceSets {
  main {
    java {
      srcDirs = [
          "$projectDir/../jgraphx_src/src"
      ]
      exclude '**/resources/'
      exclude '**/*.properties'
      exclude '**/*.gif'
    }
    resources {
      srcDirs = [
          "$projectDir/../jgraphx_src/src"
      ]
      include '**/resources/'
      exclude '**/*.java'
    }
  }
}

jar {
  manifest {
    attributes(
            'Main-Class': 'com.mxgraph.view.mxGraph',
            'Automatic-Module-Name': 'com.github.vlsi.mxgraph.jgraphx',
            '-exportcontents' : 'com.mxgraph.*',
            'Bundle-Name' : 'jGraphX',
            'Bundle-Vendor' : 'Vladimir Sitnikov',
            'Bundle-Description' : 'JGraphX: a Java Swing diagramming (graph visualisation) library',
            'Bundle-DocURL' : 'https://github.com/vlsi/jgraphx-package'
    )
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifactId = 'jgraphx'
      //artifact sourcesJar
      //artifact javadocJar
      pom {
        name = 'jgraphx'
        description = 'JGraphX is a Java Swing diagramming (graph visualisation) library'
        url = 'https://github.com/vlsi/jgraphx-publish'
        licenses {
          license {
            name = 'BSD'
            url = 'https://github.com/vlsi/jgraphx-publish/LICENSE'
          }
        }
        developers {
          developer {
            id = 'alderg'
            name = 'Gaudenz Alder'
          }
          developer {
            id = 'davidjgraph'
            name = 'David Benson'
          }
          developer {
            id = 'vlsi'
            name = 'Vladimir Sitnikov'
            email = 'sitnikov.vladimir@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:https://github.com/vlsi/jgraphx-publish.git'
          url = 'https://github.com/vlsi/jgraphx-publish'
        }
      }
      pom.withXml {
        asNode()
                .dependencies
                .dependency
                .findAll { dependency ->
                  // find all dependencies with runtime scope
                  dependency.scope.text() == 'runtime'
                }
                .each { dependency ->
                  // set the scope to 'compile'
                  dependency.scope*.value = 'compile'
                }
      }
    }
  }
  if (hasCredentials) {
    repositories {
      maven {
        // change URLs to point to your repos, e.g. http://my.org/repo
        def snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
        def releaseUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl
        credentials {
          username = getProperty('nexusPublishing.username')
          password = getProperty('nexusPublishing.password')
        }
      }
      maven {
        name = 'sampleRepo'
        url = layout.buildDirectory.dir("repo")
      }
    }
  }
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
  sign publishing.publications.mavenJava
}